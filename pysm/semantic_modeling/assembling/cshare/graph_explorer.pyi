from typing import Iterator

from data_structure import GraphNode, Graph, GraphLink


class GraphNodeHop(GraphNode):

    n_hop: int

    def __init__(self, n_hop: int) -> None : ...


class GraphExplorer(Graph[GraphNodeHop, GraphLink]):

    @staticmethod
    def from_dict(obj: dict) -> GraphExplorer: ...
    def iter_eq0hop_nodes(self) -> Iterator[GraphNodeHop]: ...
    def iter_gt0hop_nodes(self) -> Iterator[GraphNodeHop]: ...
    def iter_lt0hop_nodes(self) -> Iterator[GraphNodeHop]: ...
    def iter_lt0hop_nodes_by_label(self, label: bytes) -> Iterator[GraphNodeHop]: ...
    def iter_gt0hop_nodes_by_label(self, label: bytes) -> Iterator[GraphNodeHop]: ...
